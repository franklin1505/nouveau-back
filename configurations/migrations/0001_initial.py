# Generated by Django 4.2.16 on 2024-12-24 00:25

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_name', models.CharField(max_length=100)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('maximum_quantity', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BankTransferPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bank_name', models.CharField(help_text='Name of the bank.', max_length=100, null=True)),
                ('iban', models.CharField(help_text='International Bank Account Number (IBAN).', max_length=34)),
                ('bic', models.CharField(help_text='Bank Identifier Code (BIC).', max_length=11)),
                ('account_label', models.CharField(help_text='Account label.', max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClassicPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the package.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of the package.', null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Flat rate.', max_digits=10)),
                ('start_date', models.DateTimeField(blank=True, help_text='Start date of package validity.', null=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='End date of package validity.', null=True)),
                ('days_of_week', models.JSONField(blank=True, help_text="Specific days of the week (e.g., ['monday', 'tuesday', 'wednesday']).", null=True)),
                ('specific_hours', models.JSONField(blank=True, help_text="Specific time slots (e.g., [{'start': '08:00', 'end': '12:00'}]).", null=True)),
                ('active', models.BooleanField(default=True, help_text='Indicates if the package is active.')),
                ('departure_latitude', models.DecimalField(decimal_places=6, help_text='Departure point latitude.', max_digits=9)),
                ('departure_longitude', models.DecimalField(decimal_places=6, help_text='Departure point longitude.', max_digits=9)),
                ('arrival_latitude', models.DecimalField(decimal_places=6, help_text='Arrival point latitude.', max_digits=9)),
                ('arrival_longitude', models.DecimalField(decimal_places=6, help_text='Arrival point longitude.', max_digits=9)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FixedAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the adjustment', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Optional description', null=True)),
                ('adjustment_type', models.CharField(choices=[('discount', 'Discount'), ('increase', 'Increase')], default='discount', help_text='Type of adjustment', max_length=20)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage to apply (positive for increase, negative for discount)', max_digits=5, null=True)),
                ('fixed_value', models.DecimalField(blank=True, decimal_places=2, help_text='Fixed value to add or subtract', max_digits=10, null=True)),
                ('active', models.BooleanField(default=True, help_text='Indicates if the rule is active')),
                ('application_date', models.DateField(blank=True, help_text='Specific date for application', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeetingPlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the payment method.', max_length=255, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of the payment method.', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is this payment method active?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PayPalPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client_id', models.CharField(help_text='PayPal Client ID.', max_length=255)),
                ('client_secret', models.CharField(help_text='PayPal Client Secret.', max_length=255)),
                ('api_url', models.URLField(default='https://api-m.sandbox.paypal.com', help_text='API URL for PayPal integration.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_per_km', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('price_per_duration', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('booking_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('delivery_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('default_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Unique promo code.', max_length=50, unique=True)),
                ('description', models.TextField(blank=True, help_text='Promo code description.', null=True)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage discount (e.g., 10.00 for 10%).', max_digits=5, null=True)),
                ('fixed_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Fixed discount amount (e.g., 5.00 â‚¬).', max_digits=10, null=True)),
                ('start_date', models.DateField(blank=True, help_text='Start date of validity.', null=True)),
                ('end_date', models.DateField(blank=True, help_text='End date of validity.', null=True)),
                ('applicable_days', models.JSONField(blank=True, help_text="Specific days the promo code is valid (e.g., ['monday', 'friday']).", null=True)),
                ('start_time', models.TimeField(blank=True, help_text='Start time of validity each day.', null=True)),
                ('end_time', models.TimeField(blank=True, help_text='End time of validity each day.', null=True)),
                ('usage_count', models.PositiveIntegerField(default=0, help_text='Number of times the promo code has been used.')),
                ('usage_limit', models.PositiveIntegerField(blank=True, help_text='Maximum number of times the promo code can be used.', null=True)),
                ('active', models.BooleanField(default=True, help_text='Indicates if the promo code is currently active.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='RadiusPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the package.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of the package.', null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Flat rate.', max_digits=10)),
                ('start_date', models.DateTimeField(blank=True, help_text='Start date of package validity.', null=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='End date of package validity.', null=True)),
                ('days_of_week', models.JSONField(blank=True, help_text="Specific days of the week (e.g., ['monday', 'tuesday', 'wednesday']).", null=True)),
                ('specific_hours', models.JSONField(blank=True, help_text="Specific time slots (e.g., [{'start': '08:00', 'end': '12:00'}]).", null=True)),
                ('active', models.BooleanField(default=True, help_text='Indicates if the package is active.')),
                ('departure_latitude', models.DecimalField(decimal_places=6, help_text='Fixed departure point latitude.', max_digits=9)),
                ('departure_longitude', models.DecimalField(decimal_places=6, help_text='Fixed departure point longitude.', max_digits=9)),
                ('center_latitude', models.DecimalField(decimal_places=6, help_text='Central point latitude.', max_digits=9)),
                ('center_longitude', models.DecimalField(decimal_places=6, help_text='Central point longitude.', max_digits=9)),
                ('radius_km', models.DecimalField(decimal_places=2, help_text='Radius in kilometers around the central point.', max_digits=5)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScheduledAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the adjustment', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Optional description', null=True)),
                ('adjustment_type', models.CharField(choices=[('discount', 'Discount'), ('increase', 'Increase')], default='discount', help_text='Type of adjustment', max_length=20)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage to apply (positive for increase, negative for discount)', max_digits=5, null=True)),
                ('fixed_value', models.DecimalField(blank=True, decimal_places=2, help_text='Fixed value to add or subtract', max_digits=10, null=True)),
                ('active', models.BooleanField(default=True, help_text='Indicates if the rule is active')),
                ('start_date', models.DateTimeField(blank=True, help_text='Start date and time', null=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='End date and time', null=True)),
                ('days_of_week', models.JSONField(blank=True, help_text="Specific days of the week (e.g., ['monday', 'tuesday', 'wednesday'])", null=True)),
                ('specific_hours', models.JSONField(blank=True, help_text="Specific hours (e.g., [{'start': '08:00', 'end': '12:00'}])", null=True)),
                ('customization', models.JSONField(blank=True, help_text='Other customizations in JSON format, if necessary', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StripePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('secret_key', models.CharField(blank=True, help_text='Stripe Secret Key.', max_length=255, null=True)),
                ('publishable_key', models.CharField(blank=True, help_text='Stripe Publishable Key.', max_length=255, null=True)),
                ('redirect_url', models.URLField(blank=True, help_text='Redirect URL for Stripe integration.', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TariffRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the tariff rule.', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of the tariff rule.', null=True)),
                ('rule_type', models.CharField(choices=[('adjustment', 'RÃ©duction/Majoration'), ('package', 'Forfait'), ('promo_code', 'Code Promo')], help_text='Type of the tariff rule (adjustment, package, promo code, etc.).', max_length=50)),
                ('start_date', models.DateTimeField(blank=True, help_text='Start date of validity.', null=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='End date of validity.', null=True)),
                ('days_of_week', models.JSONField(blank=True, help_text="Specific days of the week (e.g., ['monday', 'tuesday', 'wednesday']).", null=True)),
                ('specific_hours', models.JSONField(blank=True, help_text="Specific time slots (e.g., [{'start': '08:00', 'end': '12:00'}]).", null=True)),
                ('active', models.BooleanField(default=True, help_text='Is this tariff rule currently active?')),
                ('priority', models.PositiveIntegerField(default=1, help_text='Priority of the tariff rule (1 = highest priority).')),
                ('available_to_all', models.BooleanField(default=True, help_text='Is this tariff rule available to all clients?')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('manufacture_year', models.PositiveIntegerField(blank=True, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('validation', models.BooleanField(default=False)),
                ('fuel_type', models.CharField(blank=True, choices=[('petrol', 'Petrol'), ('diesel', 'Diesel'), ('electric', 'Electric'), ('hybrid', 'Hybrid')], max_length=50, null=True)),
                ('engine', models.CharField(blank=True, max_length=50, null=True)),
                ('interior_color', models.CharField(blank=True, max_length=50, null=True)),
                ('exterior_color', models.CharField(blank=True, max_length=50, null=True)),
                ('power', models.PositiveIntegerField(blank=True, help_text='Power in horsepower', null=True)),
                ('length', models.DecimalField(blank=True, decimal_places=2, help_text='Length in meters', max_digits=5, null=True)),
                ('transmission', models.CharField(blank=True, choices=[('manual', 'Manual'), ('automatic', 'Automatic')], max_length=100, null=True)),
                ('passenger_capacity', models.PositiveIntegerField(help_text='Maximum number of passengers')),
                ('cargo_capacity', models.PositiveIntegerField(help_text='Cargo capacity in units')),
                ('base_location', models.CharField(max_length=255)),
                ('availability_type', models.CharField(choices=[('immediate', 'Immediate'), ('delayed', 'Delayed'), ('on_demand', 'On Demand')], default='immediate', help_text='Availability type of the vehicle', max_length=50)),
                ('availability_time', models.PositiveIntegerField(blank=True, help_text="Time in hours before availability (only for 'delayed' vehicles)", null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
