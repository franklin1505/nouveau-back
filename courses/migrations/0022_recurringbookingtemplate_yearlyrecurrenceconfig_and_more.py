# Generated by Django 4.2.18 on 2025-07-13 13:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('courses', '0021_booking_is_billable_when_cancelled_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='RecurringBookingTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('recurrence_type', models.CharField(choices=[('daily', 'Quotidienne'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuelle'), ('yearly', 'Annuelle'), ('custom', 'Personnalisée')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('max_occurrences', models.PositiveIntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('base_booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_templates', to='courses.booking')),
            ],
            options={
                'verbose_name': 'Template de récurrence',
                'verbose_name_plural': 'Templates de récurrence',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='YearlyRecurrenceConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('frequency_interval', models.PositiveIntegerField(default=1)),
                ('template', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='yearly_configuration', to='courses.recurringbookingtemplate')),
            ],
            options={
                'verbose_name': 'Configuration annuelle',
                'verbose_name_plural': 'Configurations annuelles',
            },
        ),
        migrations.CreateModel(
            name='WeeklyRecurrenceConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('frequency_interval', models.PositiveIntegerField(default=1)),
                ('template', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='weekly_configuration', to='courses.recurringbookingtemplate')),
            ],
            options={
                'verbose_name': 'Configuration hebdomadaire',
                'verbose_name_plural': 'Configurations hebdomadaires',
            },
        ),
        migrations.CreateModel(
            name='MonthlyRecurrenceConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('monthly_type', models.CharField(choices=[('same_date', 'Même date du mois'), ('same_position', 'Même position dans le mois')], default='same_date', max_length=20)),
                ('frequency_interval', models.PositiveIntegerField(default=1)),
                ('template', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_configuration', to='courses.recurringbookingtemplate')),
            ],
            options={
                'verbose_name': 'Configuration mensuelle',
                'verbose_name_plural': 'Configurations mensuelles',
            },
        ),
        migrations.CreateModel(
            name='DailyRecurrenceConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('include_weekends', models.BooleanField(default=False)),
                ('weekdays', models.JSONField(blank=True, default=list)),
                ('template', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='daily_configuration', to='courses.recurringbookingtemplate')),
            ],
            options={
                'verbose_name': 'Configuration quotidienne',
                'verbose_name_plural': 'Configurations quotidiennes',
            },
        ),
        migrations.CreateModel(
            name='CustomRecurrenceConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('include_weekends', models.BooleanField(default=False)),
                ('weekdays', models.JSONField(blank=True, default=list)),
                ('pattern_type', models.CharField(choices=[('days_of_week', 'Jours de la semaine'), ('interval_based', 'Intervalle fixe'), ('specific_dates', 'Dates spécifiques')], max_length=20)),
                ('frequency_interval', models.PositiveIntegerField(default=1)),
                ('interval_days', models.PositiveIntegerField(blank=True, null=True)),
                ('specific_dates', models.JSONField(default=list)),
                ('enable_multiple_times', models.BooleanField(default=False)),
                ('time_slots', models.JSONField(default=list)),
                ('enable_multiple_periods', models.BooleanField(default=False)),
                ('exclude_dates', models.JSONField(default=list)),
                ('template', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='custom_configuration', to='courses.recurringbookingtemplate')),
            ],
            options={
                'verbose_name': 'Configuration personnalisée',
                'verbose_name_plural': 'Configurations personnalisées',
            },
        ),
        migrations.CreateModel(
            name='RecurringBookingOccurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occurrence_number', models.PositiveIntegerField()),
                ('scheduled_datetime', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recurring_occurrence', to='courses.booking')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occurrences', to='courses.recurringbookingtemplate')),
            ],
            options={
                'verbose_name': 'Occurrence de récurrence',
                'verbose_name_plural': 'Occurrences de récurrence',
                'ordering': ['occurrence_number'],
                'unique_together': {('template', 'occurrence_number')},
            },
        ),
        migrations.CreateModel(
            name='RecurrencePeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_number', models.PositiveIntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('custom_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='periods', to='courses.customrecurrenceconfig')),
            ],
            options={
                'verbose_name': 'Période de récurrence',
                'verbose_name_plural': 'Périodes de récurrence',
                'ordering': ['period_number'],
                'unique_together': {('custom_config', 'period_number')},
            },
        ),
    ]
